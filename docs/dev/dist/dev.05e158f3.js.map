{"version":3,"sources":["../src/reconciler.js","../src/h.js","../src/util.js","../src/dom.js","../src/hooks.js","index.js"],"names":["DOWN1","DOWN2","App","Date","getTime","document","getElementById"],"mappings":"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","file":"dev.05e158f3.js","sourceRoot":"..","sourcesContent":["import { createElement, updateElement } from './dom'\r\nimport { resetCursor } from './hooks'\r\nimport { defer, hashfy, merge } from './util'\r\n\r\nconst options = {}\r\nconst FPS = 1000 / 60\r\nexport const [HOST, HOOK, ROOT, SVG, PLACE, UPDATE, DELETE] = [0, 1, 2, 3, 4, 5, 6]\r\n\r\nlet updateQueue = []\r\nlet nextWork = null\r\nlet pendingCommit = null\r\nlet currentFiber = null\r\n\r\nfunction render (vnode, node) {\r\n  let rootFiber = {\r\n    tag: ROOT,\r\n    node,\r\n    props: { children: vnode }\r\n  }\r\n  scheduleWork(rootFiber)\r\n}\r\n\r\nfunction scheduleWork (fiber) {\r\n  updateQueue.push(fiber)\r\n  defer(workLoop)\r\n}\r\n\r\nfunction workLoop (startTime = 0) {\r\n  if (startTime && performance.now() - startTime > FPS) {\r\n    defer(workLoop)\r\n  } else if (!nextWork && updateQueue.length > 0) {\r\n    nextWork = updateQueue.shift()\r\n    defer(workLoop)\r\n  } else {\r\n    const nextTime = performance.now()\r\n    nextWork = performWork(nextWork)\r\n    if (nextWork) {\r\n      workLoop(nextTime)\r\n    } else {\r\n      options.commitWork\r\n        ? options.commitWork(pendingCommit)\r\n        : commitWork(pendingCommit)\r\n    }\r\n  }\r\n}\r\n\r\nfunction performWork (WIP) {\r\n  WIP.parentNode = getParentNode(WIP)\r\n  WIP.tag == HOOK ? updateHOOK(WIP) : updateHost(WIP)\r\n  if (WIP.child) return WIP.child\r\n  while (WIP) {\r\n    completeWork(WIP)\r\n    if (WIP.sibling) return WIP.sibling\r\n    WIP = WIP.parent\r\n  }\r\n}\r\n\r\nfunction updateHost (WIP) {\r\n  if (!options.end && !WIP.node) {\r\n    if (WIP.type === 'svg') WIP.tag = SVG\r\n    WIP.node = createElement(WIP)\r\n  }\r\n  let p = WIP.parentNode || {}\r\n  WIP.insertPoint = p.lastFiber || null\r\n  p.lastFiber = WIP\r\n  WIP.node.lastFiber = null\r\n  reconcileChildren(WIP, WIP.props.children)\r\n}\r\n\r\nfunction getParentNode (fiber) {\r\n  if (!fiber.parent) return fiber.node\r\n  while (fiber.parent.tag === HOOK) return fiber.parent.parent.node\r\n  return fiber.parent.node\r\n}\r\n\r\nfunction updateHOOK (WIP) {\r\n  WIP.props = WIP.props || {}\r\n  WIP.state = WIP.state || {}\r\n  currentFiber = WIP\r\n  resetCursor()\r\n  reconcileChildren(WIP, WIP.type(WIP.props))\r\n}\r\n\r\nfunction reconcileChildren (WIP, children) {\r\n  const oldFibers = WIP.kids\r\n  const newFibers = (WIP.kids = hashfy(children, WIP.kids))\r\n  let reused = {}\r\n\r\n  for (const k in oldFibers) {\r\n    let newFiber = newFibers[k]\r\n    let oldFiber = oldFibers[k]\r\n\r\n    if (newFiber && newFiber.type === oldFiber.type) {\r\n      reused[k] = oldFiber\r\n    } else {\r\n      oldFiber.patchTag = DELETE\r\n      WIP.patches.push(oldFiber)\r\n    }\r\n  }\r\n\r\n  let prevFiber = null\r\n  let alternate = null\r\n\r\n  for (const k in newFibers) {\r\n    let newFiber = newFibers[k]\r\n    let oldFiber = reused[k]\r\n\r\n    if (oldFiber) {\r\n      alternate = createFiber(oldFiber, { patchTag: UPDATE })\r\n      if (!options.end) newFiber.patchTag = UPDATE\r\n      newFiber = merge(alternate, newFiber)\r\n      newFiber.alternate = alternate\r\n      if (newFiber.key) newFiber.patchTag = PLACE\r\n    } else {\r\n      newFiber = createFiber(newFiber, { patchTag: PLACE })\r\n    }\r\n\r\n    newFibers[k] = newFiber\r\n    newFiber.parent = WIP\r\n\r\n    if (prevFiber) {\r\n      prevFiber.sibling = newFiber\r\n    } else {\r\n      if (WIP.tag === SVG) newFiber.tag = SVG\r\n      WIP.child = newFiber\r\n    }\r\n    prevFiber = newFiber\r\n  }\r\n  if (prevFiber) prevFiber.sibling = null\r\n}\r\n\r\nfunction createFiber (vnode, data) {\r\n  data.tag = typeof vnode.type === 'function' ? HOOK : HOST\r\n  return merge(vnode, data)\r\n}\r\n\r\nfunction completeWork (fiber) {\r\n  if (!options.end && fiber.parent) {\r\n    fiber.parent.patches = (fiber.parent.patches || []).concat(\r\n      fiber.patches || [],\r\n      fiber.patchTag ? [fiber] : []\r\n    )\r\n  } else {\r\n    pendingCommit = fiber\r\n  }\r\n}\r\n\r\nfunction commitWork (WIP) {\r\n  WIP.patches.forEach(p => {\r\n    p.parent.patches = p.patches = null\r\n    commit(p)\r\n    const e = p.effects\r\n    if (e) for (const k in e) e[k]()\r\n  })\r\n  nextWork = pendingCommit = null\r\n}\r\nfunction commit (fiber) {\r\n  let parent = fiber.parentNode\r\n  let dom = fiber.node\r\n  while (!dom) dom = fiber.child.node\r\n  switch (fiber.patchTag) {\r\n    case UPDATE:\r\n      updateElement(dom, fiber.alternate.props, fiber.props)\r\n      break\r\n    case DELETE:\r\n      parent.removeChild(dom)\r\n      break\r\n    default:\r\n      let point = fiber.insertPoint ? fiber.insertPoint.node : null\r\n      let after = point ? point.nextSibling : parent.firstChild\r\n      if (fiber.tag === HOOK || after === dom) return\r\n      if (after === null && dom === parent.lastChild) return\r\n      parent.insertBefore(dom, after)\r\n      break\r\n  }\r\n}\r\n\r\nfunction getWIP () {\r\n  return currentFiber || null\r\n}\r\n\r\nexport { render, scheduleWork, getWIP, options }\r\n","export function h (type, attrs) {\n  let props = attrs || {}\n  let key = props.key || null\n  let children = []\n\n  for (let i = 2; i < arguments.length; i++) {\n    let vnode = arguments[i]\n    if (vnode == null || vnode === true || vnode === false) {\n    } else if (typeof vnode === 'number' || typeof vnode === 'string') {\n      children.push({ type: 'text', props: { nodeValue: vnode } })\n    } else {\n      children.push(vnode)\n    }\n  }\n\n  if (children.length) {\n    props.children = children.length === 1 ? children[0] : children\n  }\n\n  delete props.key\n  return { type, props, key }\n}\n","export const arrayfy = arr => (!arr ? [] : arr.pop ? arr : [arr])\r\n\r\nexport const isNew = (o, n) => k => k !== 'children' && o[k] !== n[k]\r\n\r\nexport function hashfy (arr) {\r\n  let out = {}\r\n  let i = 0\r\n  let j = 0\r\n  arrayfy(arr).forEach(item => {\r\n    if (item.pop) {\r\n      item.forEach(item => {\r\n        let key = item.key\r\n        key\r\n          ? (out['.' + i + '.' + key] = item)\r\n          : (out['.' + i + '.' + j] = item) && j++\r\n      })\r\n      i++\r\n    } else (out['.' + i] = item) && i++\r\n  })\r\n  return out\r\n}\r\n\r\nexport function merge (a, b) {\r\n  let out = {}\r\n  for (const i in a) out[i] = a[i]\r\n  for (const i in b) out[i] = b[i]\r\n  return out\r\n}\r\nexport const defer = requestAnimationFrame || setTimeout\r\n","import { isNew } from './util'\nimport { SVG } from './reconciler'\n\nfunction updateProperty (dom, name, value, newValue) {\n  if (name === 'style') {\n    for (let key in value) if (!newValue[key]) dom[name][key] = ''\n    for (let key in newValue) dom[name][key] = newValue[key]\n  } else if (name[0] === 'o' && name[1] === 'n') {\n    name = name.slice(2).toLowerCase()\n    if (value) dom.removeEventListener(name, value)\n    dom.addEventListener(name, newValue)\n  } else if (name in dom && !(dom instanceof SVGElement)) {\n    dom[name] = newValue == null ? '' : newValue\n  } else if (newValue == null || newValue === false) {\n    dom.removeAttribute(name)\n  } else {\n    dom.setAttribute(name, newValue)\n  }\n}\n\nexport function updateElement (dom, props, newProps) {\n  Object.keys(newProps)\n    .filter(isNew(props, newProps))\n    .forEach(key => updateProperty(dom, key, props[key], newProps[key]))\n}\n\nexport function createElement (fiber) {\n  const dom =\n    fiber.type === 'text'\n      ? document.createTextNode('')\n      : fiber.tag === SVG\n        ? document.createElementNS('http://www.w3.org/2000/svg', fiber.type)\n        : document.createElement(fiber.type)\n  updateElement(dom, [], fiber.props)\n  return dom\n}\n","import { scheduleWork, getWIP } from './reconciler'\nlet cursor = 0\n\nfunction update (key, reducer, value) {\n  const current = this ? this : getWIP()\n  value = reducer ? reducer(current.state[key], value) : value\n  current.state[key] = value\n  scheduleWork(current)\n}\nexport function resetCursor () {\n  cursor = 0\n}\nexport function useState (initState) {\n  return useReducer(null, initState)\n}\nexport function useReducer (reducer, initState) {\n  let current = getWIP() || {}\n  let key = '$' + cursor\n  let setter = update.bind(current, key, reducer)\n  cursor++\n  let state = current.state || {}\n  if (key in state) {\n    return [state[key], setter]\n  } else {\n    current.state[key] = initState\n    return [initState, setter]\n  }\n}\n\nexport function useEffect (cb, inputs) {\n  let current = getWIP() || {}\n  let key = '$' + cursor\n  current.effects = current.effects || {}\n  current.effects[key] = useCallback(cb, inputs)\n  cursor++\n}\n\nexport function useCallback (cb, inputs) {\n  return useMemo(() => cb, inputs)\n}\n\nexport function useMemo (cb, inputs) {\n  let current = getWIP() || {}\n  let isChange = inputs\n    ? (current.oldInputs || []).some((v, i) => inputs[i] !== v)\n    : true\n  if (inputs && !inputs.length && !current.isMounted) {\n    isChange = true\n    current.isMounted = true\n  }\n  current.oldInputs = inputs\n\n  return isChange || !current.isMounted ? (current.memo = cb()) : current.memo\n}\n\nexport function createContext (init = {}) {\n  let context = init\n  let set = {}\n  const update = context => {\n    for (let key in set) set[key](context)\n  }\n  const subscribe = (fn, name) => {\n    if (name in set) return\n    set[name] = fn\n  }\n\n  return { context, update, subscribe, set }\n}\n\nexport function useContext (ctx) {\n  const [context, setContext] = useState(ctx.context)\n  const name = getWIP().type.name\n  ctx.subscribe(setContext, name)\n  return [context, ctx.update]\n}\n","import './style.css'\nimport { h, render } from 'fre'\n\nconst DOWN1 =\n  'https://cdn.jsdelivr.net/gh/cliclitv/clicli-hybrid-app@master/bin/clicli.apk'\nconst DOWN2 =\n  'https://cdn.staticaly.com/gh/cliclitv/clicli-hybrid-app/master/bin/clicli.apk?env=dev'\n\nconst App = () => (\n  <div class='main'>\n    <div class='left'>\n      <div class='logo' />\n      <h1>人·生·就·是·佛</h1>\n      <ul class='link'>\n        <a href={DOWN1 + '?t=' + new Date().getTime()} target='_blank'>\n          <li>下载一（国内）</li>\n        </a>\n        <a href={DOWN2} target='_blank'>\n          <li>下载二（国外）</li>\n        </a>\n      </ul>\n    </div>\n    <div class='right' />\n  </div>\n)\n\nrender(<App />, document.getElementById('root'))\n"]}