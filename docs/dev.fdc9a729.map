{"version":3,"sources":["../src/reconciler.js","../src/h.js","../src/util.js","../src/dom.js","../src/hooks.js","index.js"],"names":["DOWN1","DOWN2","QCODE","App","Date","getTime","document","getElementById"],"mappings":"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","file":"dev.fdc9a729.map","sourceRoot":"..","sourcesContent":["import { createElement, updateElement } from './dom'\r\nimport { resetCursor } from './hooks'\r\nimport { defer, hashfy, merge, isSame, isFn } from './util'\r\n\r\nconst options = {}\r\nconst FPS = 1000 / 60\r\nconst [HOST, HOOK, ROOT, PLACE, UPDATE, DELETE] = [0, 1, 2, 3, 4, 5]\r\n\r\nlet updateQueue = []\r\nlet nextWork = null\r\nlet pendingCommit = null\r\nlet currentFiber = null\r\nlet once = true\r\n\r\nfunction render (vnode, el) {\r\n  let rootFiber = {\r\n    tag: ROOT,\r\n    base: el,\r\n    props: { children: vnode }\r\n  }\r\n  scheduleWork(rootFiber)\r\n}\r\n\r\nfunction scheduleWork (fiber) {\r\n  updateQueue.push(fiber)\r\n  if (!nextWork) {\r\n    nextWork = updateQueue.shift()\r\n    defer(workLoop)\r\n  }\r\n}\r\n\r\nfunction workLoop (startTime = 0) {\r\n  if (startTime && performance.now() - startTime > FPS) {\r\n    defer(workLoop)\r\n  } else {\r\n    const nextTime = performance.now()\r\n    nextWork = performWork(nextWork)\r\n    if (nextWork) {\r\n      workLoop(nextTime)\r\n    } else {\r\n      options.commitWork\r\n        ? options.commitWork(pendingCommit)\r\n        : commitWork(pendingCommit)\r\n    }\r\n  }\r\n}\r\n\r\nfunction performWork (WIP) {\r\n  WIP.tag == HOOK ? updateHOOK(WIP) : updateHost(WIP)\r\n  if (WIP.child) return WIP.child\r\n  while (WIP) {\r\n    completeWork(WIP)\r\n    if (WIP.sibling) return WIP.sibling\r\n    WIP = WIP.parent\r\n  }\r\n}\r\n\r\nfunction updateHost (WIP) {\r\n  if (!options.end && !WIP.base) {\r\n    WIP.base = createElement(WIP)\r\n  }\r\n\r\n  let parent = WIP.parent || {}\r\n  WIP.insertPoint = parent.oldPoint\r\n  parent.oldPoint = WIP\r\n  const children = WIP.props.children\r\n  reconcileChildren(WIP, children)\r\n}\r\n\r\nfunction updateHOOK (WIP) {\r\n  WIP.props = WIP.props || {}\r\n  WIP.state = WIP.state || {}\r\n  currentFiber = WIP\r\n  resetCursor()\r\n  const children = WIP.type(WIP.props)\r\n  reconcileChildren(WIP, children)\r\n  currentFiber.patches = WIP.patches\r\n}\r\nfunction fiberize (children, WIP) {\r\n  return (WIP.children = hashfy(children, WIP.children))\r\n}\r\n\r\nfunction reconcileChildren (WIP, children) {\r\n  const oldFibers = WIP.children\r\n  const newFibers = fiberize(children, WIP)\r\n  let reused = {}\r\n\r\n  for (let k in oldFibers) {\r\n    let newFiber = newFibers[k]\r\n    let oldFiber = oldFibers[k]\r\n\r\n    if (newFiber && isSame(newFiber, oldFiber)) {\r\n      reused[k] = oldFiber\r\n    } else {\r\n      oldFiber.patchTag = DELETE\r\n      WIP.patches.push(oldFiber)\r\n    }\r\n  }\r\n\r\n  let prevFiber = null\r\n  let alternate = null\r\n\r\n  for (let k in newFibers) {\r\n    let newFiber = newFibers[k]\r\n    let oldFiber = reused[k]\r\n\r\n    // console.log(newFiber,oldFiber)\r\n\r\n    if (oldFiber) {\r\n      alternate = createFiber(oldFiber, {\r\n        patchTag: UPDATE\r\n      })\r\n      if (!options.end) newFiber.patchTag = UPDATE\r\n      newFiber = merge(alternate, newFiber)\r\n      newFiber.alternate = alternate\r\n      if (oldFiber.key) {\r\n        newFiber.patchTag = PLACE\r\n      }\r\n    } else {\r\n      newFiber = createFiber(newFiber, {\r\n        patchTag: PLACE\r\n      })\r\n    }\r\n\r\n    newFibers[k] = newFiber\r\n    newFiber.parent = WIP\r\n\r\n    if (prevFiber) {\r\n      prevFiber.sibling = newFiber\r\n    } else {\r\n      WIP.child = newFiber\r\n      newFiber.oldPoint = null\r\n    }\r\n    prevFiber = newFiber\r\n  }\r\n  if (prevFiber) prevFiber.sibling = null\r\n}\r\n\r\nfunction createFiber (vnode, data) {\r\n  data.tag = isFn(vnode.type) ? HOOK : HOST\r\n  vnode.props = vnode.props\r\n  return merge(vnode, data)\r\n}\r\n\r\nfunction completeWork (fiber) {\r\n  if (!options.end && fiber.parent) {\r\n    fiber.parent.patches = (fiber.parent.patches || []).concat(\r\n      fiber.patches || [],\r\n      fiber.patchTag ? [fiber] : []\r\n    )\r\n  } else {\r\n    pendingCommit = fiber\r\n  }\r\n}\r\n\r\nfunction commitWork (WIP) {\r\n  WIP.patches.forEach(p => commit(p))\r\n  once = false\r\n  nextWork = null\r\n  pendingCommit = null\r\n}\r\nfunction commit (fiber) {\r\n  let p = fiber.parent\r\n  while (p.tag == HOOK) p = p.parent\r\n  const parent = p.base\r\n  let dom = fiber.base || fiber.child.base\r\n  p.patches = fiber.patches = []\r\n  if (fiber.parent.tag == ROOT) return\r\n\r\n  switch (fiber.patchTag) {\r\n    case UPDATE:\r\n      updateElement(dom, fiber.alternate.props, fiber.props)\r\n      break\r\n    case DELETE:\r\n      parent.removeChild(dom)\r\n      break\r\n    default:\r\n      const insertPoint = fiber.insertPoint\r\n      let point = insertPoint ? insertPoint.base : null\r\n      let after = point ? point.nextSibling : parent.firstChild\r\n      if (after == dom) return\r\n      if (after === null && dom === parent.lastChild) return\r\n      if (once) after = null\r\n      parent.insertBefore(dom, after)\r\n      break\r\n  }\r\n}\r\n\r\nfunction getWIP () {\r\n  return currentFiber || null\r\n}\r\n\r\nexport { render, scheduleWork, getWIP, options }\r\n","export function h (type, config) {\n  let props = config || {}\n  let key = props.key || null\n  let children = []\n\n  for (let i = 2; i < arguments.length; i++) {\n    let vnode = arguments[i]\n    if (vnode === null || vnode === true || vnode === false) {\n    } else if (vnode.pop || typeof vnode === 'object') {\n      children.push(vnode)\n    } else if (typeof vnode === 'function') {\n      children = vnode\n    } else {\n      children.push({ type: 'text', props: { nodeValue: vnode } })\n    }\n  }\n  props.children = children\n\n  return { type, props, key }\n}\n","export const arrayfy = arr => (!arr ? [] : Array.isArray(arr) ? arr : [arr])\r\n\r\nexport const isSame = (a, b) => a.type === b.type\r\n\r\nexport const isNew = (o, n) => k =>\r\n  k !== 'children' && k !== 'key' && o[k] !== n[k]\r\n\r\nexport function hashfy (arr) {\r\n  let out = {}\r\n  let i = 0\r\n  let j = 0\r\n  const newKids = arrayfy(arr)\r\n  newKids.forEach(item => {\r\n    if (item.pop) {\r\n      item.forEach(item => {\r\n        let key = ((item || {}).props || {}).key\r\n        key\r\n          ? (out['.' + i + '.' + key] = item)\r\n          : (out['.' + i + '.' + j] = item) && j++\r\n      })\r\n      i++\r\n    } else {\r\n      ;(out['.' + i] = item) && i++\r\n    }\r\n  })\r\n  return out\r\n}\r\n\r\nexport function merge (a, b) {\r\n  let out = {}\r\n  for (const i in a) out[i] = a[i]\r\n  for (const i in b) out[i] = b[i]\r\n  return out\r\n}\r\nexport const defer = requestAnimationFrame || setTimeout\r\n\r\nexport const isFn = fn => typeof fn === 'function'\r\n","import { isNew } from './util'\n\nfunction updateProperty (dom, name, value, newValue) {\n  if (name === 'style') {\n    for (key in newValue) {\n      let style = !newValue || !newValue[key] ? '' : newValue[key]\n      dom[name][key] = style\n    }\n  } else if (name[0] === 'o' && name[1] === 'n') {\n    name = name.slice(2).toLowerCase()\n    if (value) {\n      dom.removeEventListener(name, value)\n    }\n    dom.addEventListener(name, newValue)\n  } else {\n    dom.setAttribute(name, newValue)\n  }\n}\n\nexport function updateElement (dom, props, newProps) {\n  Object.keys(newProps)\n    .filter(isNew(props, newProps)) // 进行浅比较和过滤\n    .forEach(key => {\n      if (key === 'value' || key === 'nodeValue') {\n        dom[key] = newProps[key]\n      } else {\n        updateProperty(dom, key, props[key], newProps[key])\n      }\n    })\n}\n\nexport function createElement (fiber) {\n  const dom =\n    fiber.type === 'text'\n      ? document.createTextNode('')\n      : document.createElement(fiber.type)\n  updateElement(dom, [], fiber.props)\n  return dom\n}\n","import { scheduleWork, getWIP } from './reconciler'\nlet cursor = 0\n\nfunction update (key, reducer, value) {\n  const current = this ? this : getWIP()\n  value = reducer ? reducer(current.state[key], value) : value\n  current.state[key] = value\n  scheduleWork(current)\n}\nexport function resetCursor () {\n  cursor = 0\n}\nexport function useState (initState) {\n  return useReducer(null, initState)\n}\nexport function useReducer (reducer, initState) {\n  let current = getWIP()\n  if (!current) return [initState, setter]\n  let key = '$' + cursor\n  let setter = update.bind(current, key, reducer)\n  cursor++\n  let state = current.state || {}\n  if (key in state) {\n    return [state[key], setter]\n  } else {\n    current.state[key] = initState\n    return [initState, setter]\n  }\n}\n\nexport function useEffect (cb, inputs) {\n  let current = getWIP()\n  if (current) current.effect = useCallback(cb, inputs)\n}\n\nexport function useCallback (cb, inputs) {\n  return useMemo(() => cb, inputs)\n}\n\nexport function useMemo (cb, inputs) {\n  let current = getWIP()\n  if (current) {\n    let hasChaged = inputs\n      ? (current.oldInputs || []).some((v, i) => inputs[i] !== v)\n      : true\n    if (inputs && !inputs.length && !current.isMounted) {\n      hasChaged = true\n      current.isMounted = true\n    }\n    current.oldInputs = inputs\n    \n    if (hasChaged) return cb()\n  }\n}\n\nexport function createContext (init = {}) {\n  let context = init\n  let set = {}\n  const update = context => {\n    for (let key in set) set[key](context)\n  }\n  const subscribe = (fn, name) => {\n    if (name in set) return\n    set[name] = fn\n  }\n\n  return { context, update, subscribe, set }\n}\n\nexport function useContext (ctx) {\n  const [context, setContext] = useState(ctx.context)\n  const name = getWIP().type.name\n  ctx.subscribe(setContext, name)\n  return [context, ctx.update]\n}\n","import './style.css'\r\nimport { h, render } from 'fre'\r\n\r\nconst DOWN1 =\r\n  'https://cdn.jsdelivr.net/gh/cliclitv/clicli-hybrid-app@master/bin/clicli.apk'\r\nconst DOWN2 =\r\n  'https://cdn.staticaly.com/gh/cliclitv/clicli-hybrid-app/master/bin/clicli.apk?env=dev'\r\nconst QCODE =\r\n  'https://s2.ax1x.com/2019/09/07/nl0FFs.png'\r\n\r\nfunction App () {\r\n  return (\r\n    <div class='main'>\r\n      <div class='left'>\r\n        <div class='logo' />\r\n        <h1>人·生·就·是·佛</h1>\r\n        <ul class='link'>\r\n          <a href={DOWN1 + '?t=' + new Date().getTime()} target='_blank'>\r\n            <li>下载一（国内）</li>\r\n          </a>\r\n          <a href={DOWN2} target='_blank'>\r\n            <li>下载二（国外）</li>\r\n          </a>\r\n        </ul>\r\n        <div class='qcode'>\r\n          <img src={QCODE} alt='c站 app' />\r\n        </div>\r\n      </div>\r\n      <div class='right' />\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<App />, document.getElementById('root'))\r\n"]}